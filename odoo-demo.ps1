# Script PowerShell - Gestion Odoo Demo
# Usage: .\odoo-demo.ps1 [start|stop|restart|logs|shell|clean]

param(
    [Parameter(Position=0)]
    [ValidateSet('start', 'stop', 'restart', 'logs', 'shell', 'psql', 'clean', 'status', 'help')]
    [string]$Command = 'help'
)

$ConfigPath = ".\configuration"

function Show-Help {
    Write-Host "=== Odoo Consultant Demo - Aide ===" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "Commandes disponibles:" -ForegroundColor Yellow
    Write-Host "  start      - D√©marrer les conteneurs Odoo" -ForegroundColor Green
    Write-Host "  stop       - Arr√™ter les conteneurs" -ForegroundColor Green
    Write-Host "  restart    - Red√©marrer Odoo (apr√®s modif code)" -ForegroundColor Green
    Write-Host "  logs       - Afficher les logs Odoo (temps r√©el)" -ForegroundColor Green
    Write-Host "  shell      - Acc√©der au shell du conteneur Odoo" -ForegroundColor Green
    Write-Host "  psql       - Acc√©der √† PostgreSQL" -ForegroundColor Green
    Write-Host "  status     - Voir le statut des conteneurs" -ForegroundColor Green
    Write-Host "  clean      - Arr√™ter et supprimer volumes (ATTENTION: perte donn√©es)" -ForegroundColor Red
    Write-Host "  help       - Afficher cette aide" -ForegroundColor Green
    Write-Host ""
    Write-Host "Exemples:" -ForegroundColor Yellow
    Write-Host "  .\odoo-demo.ps1 start"
    Write-Host "  .\odoo-demo.ps1 logs"
    Write-Host ""
}

function Start-Odoo {
    Write-Host "üöÄ D√©marrage des conteneurs Odoo..." -ForegroundColor Cyan
    Set-Location $ConfigPath
    docker-compose up -d
    Set-Location ..
    Write-Host ""
    Write-Host "‚úÖ Odoo d√©marr√© !" -ForegroundColor Green
    Write-Host "   Acc√®s: http://localhost:8069" -ForegroundColor Yellow
    Write-Host "   PgAdmin: http://localhost:8080" -ForegroundColor Yellow
    Write-Host ""
}

function Stop-Odoo {
    Write-Host "‚è∏Ô∏è  Arr√™t des conteneurs..." -ForegroundColor Cyan
    Set-Location $ConfigPath
    docker-compose down
    Set-Location ..
    Write-Host "‚úÖ Conteneurs arr√™t√©s" -ForegroundColor Green
}

function Restart-Odoo {
    Write-Host "üîÑ Red√©marrage Odoo..." -ForegroundColor Cyan
    Set-Location $ConfigPath
    docker-compose restart odoo
    Set-Location ..
    Write-Host "‚úÖ Odoo red√©marr√©" -ForegroundColor Green
}

function Show-Logs {
    Write-Host "üìã Logs Odoo (Ctrl+C pour quitter)..." -ForegroundColor Cyan
    Set-Location $ConfigPath
    docker-compose logs -f odoo
    Set-Location ..
}

function Open-Shell {
    Write-Host "üêö Acc√®s au shell Odoo..." -ForegroundColor Cyan
    docker exec -it odoo_app bash
}

function Open-Psql {
    Write-Host "üóÑÔ∏è  Acc√®s PostgreSQL..." -ForegroundColor Cyan
    docker exec -it odoo_db psql -U odoo
}

function Show-Status {
    Write-Host "üìä Statut des conteneurs:" -ForegroundColor Cyan
    Set-Location $ConfigPath
    docker-compose ps
    Set-Location ..
}

function Clean-All {
    Write-Host "‚ö†Ô∏è  ATTENTION: Cette commande va supprimer TOUTES les donn√©es !" -ForegroundColor Red
    $confirmation = Read-Host "√ätes-vous s√ªr ? (tapez 'OUI' pour confirmer)"
    
    if ($confirmation -eq 'OUI') {
        Write-Host "üóëÔ∏è  Suppression conteneurs et volumes..." -ForegroundColor Yellow
        Set-Location $ConfigPath
        docker-compose down -v
        Set-Location ..
        Write-Host "‚úÖ Nettoyage termin√©" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Annul√©" -ForegroundColor Yellow
    }
}

# Ex√©cution de la commande
switch ($Command) {
    'start'   { Start-Odoo }
    'stop'    { Stop-Odoo }
    'restart' { Restart-Odoo }
    'logs'    { Show-Logs }
    'shell'   { Open-Shell }
    'psql'    { Open-Psql }
    'status'  { Show-Status }
    'clean'   { Clean-All }
    'help'    { Show-Help }
    default   { Show-Help }
}
